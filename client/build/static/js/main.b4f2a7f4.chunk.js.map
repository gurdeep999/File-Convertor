{"version":3,"sources":["components/Header.js","components/Footer.js","services/files.js","components/Convertor.js","App.js","reportWebVitals.js","index.js"],"names":["StyledHeader","styled","header","StyledNav","nav","Header","Footer","className","href","API_URL","fileService","upload","data","a","config","headers","axios","post","response","destroy","path","console","log","message","pairs","csv","json","StyledConvertor","div","Convertor","useState","file","setFile","from","setFrom","to","setTo","onDrop","useCallback","files","uploadedFile","useDropzone","getRootProps","getInputProps","rootRef","downloadFile","download","returnedFile","fileName","mimetype","destroyFile","handleSubmit","e","preventDefault","formData","FormData","append","onSubmit","htmlFor","value","onChange","target","id","Object","keys","map","k","ref","name","onClick","stopPropagation","StyledApp","StyledCenterContainer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ieAGA,IAAMA,EAAeC,IAAOC,OAAV,KAQZC,EAAYF,IAAOG,IAAV,KAqBAC,EAbA,WACb,OACE,eAACL,EAAD,WACE,iDACA,eAACG,EAAD,WACE,wCACA,0CACA,gDCjBOG,EANA,WACb,OACE,qBAAKC,UAAU,oBAAf,SAAmC,6DAAqB,mBAAGC,KAAK,oCAAR,gC,+DCHtDC,EAAU,iCAqBDC,EAJK,CAClBC,OAhBU,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,6DACPC,EAAS,CACbC,QAAS,CACP,eAAgB,wBAHP,SAMUC,IAAMC,KAAN,UAAcR,EAAd,YAAiCG,EAAME,GANjD,cAMPI,EANO,yBAONA,EAASN,MAPH,2CAAH,sDAgBFO,QANG,uCAAG,WAAOC,GAAP,eAAAP,EAAA,sEACSG,IAAMC,KAAN,UAAcR,EAAd,WAAgC,CAACW,SAD1C,OACRF,EADQ,OAEdG,QAAQC,IAAIJ,EAASN,KAAKW,SAFZ,2CAAH,uD,w3DCRb,IAAMC,EAAQ,CACZC,IAAK,OACLC,KAAM,OAGFC,EAAkB1B,IAAO2B,IAAV,KAmMNC,EAzGG,WAAO,IAAD,EACEC,mBAAS,MADX,mBACfC,EADe,KACTC,EADS,OAEEF,mBAAS,WAFX,mBAEfG,EAFe,KAETC,EAFS,OAGFJ,mBAAS,WAHP,mBAGfK,EAHe,KAGXC,EAHW,KAKhBC,EAASC,uBAAY,SAACC,GAAW,IAC9BC,EAD6B,YACbD,EADa,MAEpCP,EAAQQ,KAEP,IATmB,EAU2BC,YAAY,CAAEJ,WAAvDK,EAVc,EAUdA,aAAcC,EAVA,EAUAA,cAAeC,EAVf,EAUeA,QAE/BC,EAAY,uCAAG,WAAOjC,GAAP,SAAAC,EAAA,wFAEViC,IAASlC,EAAKmC,aAAanC,EAAKoC,SAASpC,EAAKqC,WAFpC,gCAIjB5B,QAAQC,IAAI,gCAJK,wDAAH,sDAQZ4B,EAAW,uCAAG,WAAO9B,GAAP,SAAAP,EAAA,sEACZH,EAAYS,QAAQC,GADR,2CAAH,sDAIX+B,EAAY,uCAAG,WAAOC,GAAP,iBAAAvC,EAAA,yDACnBuC,EAAEC,iBADiB,SAGJ,YAATpB,GAA6B,YAAPE,EAHT,qBAIXJ,EAJW,wBAKPuB,EAAW,IAAIC,UACZC,OAAO,OAAQzB,GACxBuB,EAASE,OAAO,OAAQvB,GACxBqB,EAASE,OAAO,KAAMrB,GACtBH,EAAQ,IACRE,EAAQ,WACRE,EAAM,WAXO,UAYM1B,EAAYC,OAAO2C,GAZzB,eAYP1C,EAZO,iBAaPiC,EAAajC,GAbN,yBAcPsC,EAAYtC,EAAKmC,cAdV,gCAgBb1B,QAAQC,IAAI,kCAhBC,gCAmBfD,QAAQC,IAAI,+DAnBG,0DAsBjB,KAAEJ,UAAYG,QAAQC,IAAI,KAAEJ,SAASN,MAtBpB,0DAAH,sDA0BlB,OACE,cAACe,EAAD,CAAiBpB,UAAU,kBAA3B,SACE,uBAAMkD,SAAUN,EAAhB,UACE,sBAAK5C,UAAU,OAAf,UACE,uBAAOmD,QAAQ,OAAf,kBACA,qBAAKnD,UAAU,SAAf,SACE,yBAAQoD,MAAO1B,EAAM2B,SAAU,SAACR,GAAD,OAAOlB,EAAQkB,EAAES,OAAOF,QAAQG,GAAG,OAAlE,UAEIC,OAAOC,KAAKxC,GAAOyC,KAAI,SAAAC,GAAC,OACtB,wBAAgBP,MAAOO,EAAvB,SAA2BA,GAAdA,MAGjB,wBAAQP,MAAM,UAAd,sCAKN,sBAAKpD,UAAU,KAAf,UACE,uBAAOmD,QAAQ,KAAf,gBACA,sBAAKnD,UAAU,SAAf,UACE,yBAAQoD,MAAOxB,EAAIyB,SAAU,SAACR,GAAD,OAAOhB,EAAMgB,EAAES,OAAOF,QAAQG,GAAG,KAA9D,UAEI7B,GAAS,wBAAQ0B,MAAOnC,EAAMS,GAArB,SAA6BT,EAAMS,KAE9C,wBAAQ0B,MAAM,UAAd,iCAEF,qBAAKpD,UAAU,gBAGnB,qBAAKA,UAAU,eAAf,SACE,gDAASmC,EAAa,CAAEnC,UAAW,eAAnC,IAAmD4D,IAAKvB,EAAxD,UACE,qCAAWD,MACTZ,EAKE,gCACE,qDACCA,EAAKqC,KACN,qBAAK7D,UAAU,cAAc8D,QAAS,SAACjB,GACrCpB,EAAQ,MACRoB,EAAEkB,mBAFJ,uBANF,8BAAG,sEAAH,iCAeR,wBAAQ/D,UAAU,GAAlB,2B,wRCnMR,IAAMgE,EAAYtE,IAAO2B,IAAV,KAYT4C,EAAwBvE,IAAO2B,IAAV,KAgBZ6C,EAbH,WAEV,OACE,eAACF,EAAD,WACE,cAAC,EAAD,IACA,cAACC,EAAD,UACE,cAAC,EAAD,MAEF,cAAC,EAAD,QChBSE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b4f2a7f4.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledHeader = styled.header`\r\ndisplay: flex;\r\nwidth: 100%;\r\npadding: 1rem 2rem;\r\nfont-size: 2.2rem;\r\nmargin-bottom: 2rem;\r\n`\r\n\r\nconst StyledNav = styled.nav`\r\nmargin-left: auto;\r\n\r\nspan {\r\n  margin-left: 2rem;\r\n}\r\n`\r\n\r\nconst Header = () => {\r\n  return (\r\n    <StyledHeader>\r\n      <div>File Convertor</div>\r\n      <StyledNav>\r\n        <span>Home</span>\r\n        <span>Github</span>\r\n        <span>About</span>\r\n      </StyledNav>\r\n    </StyledHeader>\r\n  )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"container__footer\"><div>Made with ❤️ by <a href=\"https://gurdeepsingh.netlify.app/\">gurdeepsingh</a></div></div>\r\n  )\r\n}\r\n\r\nexport default Footer","import axios from 'axios'\r\n\r\nconst API_URL = 'http://localhost:3001/api/file'\r\n\r\nconst upload = async (data) => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'multipart/form-data'\r\n    },\r\n  }\r\n  const response = await axios.post(`${API_URL}/convert`, data, config)\r\n  return response.data\r\n}\r\n\r\nconst destroy = async (path) => {\r\n  const response = await axios.post(`${API_URL}/delete`, {path})\r\n  console.log(response.data.message)\r\n}\r\n\r\nconst fileService = {\r\n  upload, destroy\r\n}\r\n\r\nexport default fileService\r\n","import React, { useCallback, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useDropzone } from 'react-dropzone'\r\nimport fileService from '../services/files'\r\nimport download from 'downloadjs'\r\n\r\nconst pairs = {\r\n  csv: 'json',\r\n  json: 'csv'\r\n}\r\n\r\nconst StyledConvertor = styled.div`\r\nbackground-color: rgb(248,249,249);\r\nborder-radius: 15px;\r\npadding: 4rem 5rem;\r\n\r\n  form {\r\n    display: grid;\r\n    grid-template-areas: 'from to'\r\n                        'file file'\r\n                        'button button';\r\n    gap: 2rem 5rem;\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-template-rows: 150px 150px auto;\r\n    align-items: center;\r\n    justify-items:center;\r\n    .from {\r\n      grid-area: from;\r\n    }\r\n\r\n    .to {\r\n      grid-area: to;\r\n    }\r\n\r\n    .file-section {\r\n      grid-area: file;\r\n\r\n      .remove-file {\r\n        color: blue;\r\n        display: inline-block;\r\n        margin: 0 10px;\r\n      }\r\n    }\r\n   \r\n    button {\r\n      grid-area: button;\r\n      align-self: center;\r\n      justify-self: center;\r\n      padding: 1.5rem 2rem;\r\n      border-radius: 15px;\r\n      font-weight: 500;\r\n      letter-spacing: 1px;\r\n      box-shadow: 1px 3px rgb(156,156,156);\r\n      transition: 0.2s;\r\n      outline:none;\r\n      color: #fff;\r\n      background-color: #007bff;\r\n      border-color: #007bff;\r\n      margin-bottom: 40px;\r\n    }\r\n\r\n    button:focus {\r\n\r\n\r\n    }\r\n    button:active {\r\n      box-shadow: 1px 1px rgb(156,156,156);\r\n      transform: translateY(2px);\r\n    }\r\n  }\r\n\r\n  .drop-zone {\r\n    margin-bottom: 10px;\r\n    padding: 40px 10px;\r\n    height: inherit;\r\n    border: 2px dashed #e9ebeb;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    cursor: pointer;\r\n    width: 100%;\r\n    \r\n    &:focus {\r\n      outline: none;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 600px) {\r\n    form {\r\n      grid-template-areas: 'from'\r\n                          'to'\r\n                        'file'\r\n                        'button';\r\n    gap: 2rem 5rem;\r\n    grid-template-columns: 1fr;\r\n    grid-template-rows: 1fr 1fr auto auto;\r\n    }\r\n  }\r\n`\r\n\r\nconst Convertor = () => {\r\n  const [file, setFile] = useState(null)\r\n  const [from, setFrom] = useState('default')\r\n  const [to, setTo] = useState('default')\r\n\r\n  const onDrop = useCallback((files) => {\r\n    const [uploadedFile] = files\r\n    setFile(uploadedFile)\r\n\r\n  }, [])\r\n  const { getRootProps, getInputProps, rootRef } = useDropzone({ onDrop })\r\n\r\n  const downloadFile = async (data) => {\r\n    try {\r\n      return download(data.returnedFile,data.fileName,data.mimetype)\r\n    } catch (e) {\r\n      console.log('error while downloading file')\r\n    }\r\n  }\r\n\r\n  const destroyFile = async (path) => {\r\n    await fileService.destroy(path)\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    try {\r\n      if (from !== 'default' || to !== 'default') {\r\n        if (file) {\r\n          const formData = new FormData()\r\n          formData.append('file', file)\r\n          formData.append('from', from)\r\n          formData.append('to', to)\r\n          setFile('')\r\n          setFrom('default')\r\n          setTo('default')\r\n          const data = await fileService.upload(formData)\r\n          await downloadFile(data)\r\n          await destroyFile(data.returnedFile)\r\n        } else {\r\n          console.log('please select a file to upload')\r\n        }\r\n      } else {\r\n        console.log('please select file type to be converted and the target type')\r\n      }\r\n    } catch (e) {\r\n      e.response && console.log(e.response.data)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <StyledConvertor className=\"shadow p-3 mb-5\">\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"from\">\r\n          <label htmlFor=\"from\">From</label>\r\n          <div className=\"select\">\r\n            <select value={from} onChange={(e) => setFrom(e.target.value)} id=\"from\">\r\n              {\r\n                Object.keys(pairs).map(k => (\r\n                  <option key={k} value={k}>{k}</option>\r\n                ))\r\n              }\r\n              <option value=\"default\">Select File Type</option>\r\n            </select>\r\n\r\n          </div>\r\n        </div>\r\n        <div className=\"to\">\r\n          <label htmlFor=\"to\">To</label>\r\n          <div className=\"select\">\r\n            <select value={to} onChange={(e) => setTo(e.target.value)} id=\"to\">\r\n              {\r\n                from && (<option value={pairs[from]}>{pairs[from]}</option>)\r\n              }\r\n              <option value=\"default\">Select File Type</option>\r\n            </select>\r\n            <div className=\"focus\"></div>\r\n          </div>\r\n        </div>\r\n        <div className=\"file-section\">\r\n          <div {...getRootProps({ className: 'drop-zone' })} ref={rootRef}>\r\n            <input {...getInputProps()} />\r\n            {!file\r\n              ? (\r\n                <p><span>Drag 'n' drop some files here, or </span>click to select files</p>\r\n              )\r\n              : (\r\n                <div>\r\n                  <strong>Selected File: </strong>\r\n                  {file.name}\r\n                  <div className=\"remove-file\" onClick={(e) => {\r\n                    setFile(null)\r\n                    e.stopPropagation()\r\n                  }}>remove</div>\r\n                </div>\r\n              )\r\n            }\r\n          </div>\r\n        </div>\r\n        <button className=\"\">CONVERT</button>\r\n      </form>\r\n    </StyledConvertor>\r\n  )\r\n}\r\n\r\nexport default Convertor","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Header from './components/Header'\r\nimport Footer from './components/Footer'\r\nimport Convertor from './components/Convertor'\r\nconst StyledApp = styled.div`\r\nfont-size: 1.6rem;\r\nmin-height: 100vh;\r\ndisplay: flex;\r\nflex-direction: column;\r\nflex: 1 1 0%;\r\nwidth: 100%;\r\nalign-items: center;\r\n\r\n\r\n`\r\n\r\nconst StyledCenterContainer = styled.div`\r\n\r\n`\r\nconst App = () => {\r\n\r\n  return (\r\n    <StyledApp>\r\n      <Header />\r\n      <StyledCenterContainer>\r\n        <Convertor />\r\n      </StyledCenterContainer>\r\n      <Footer />\r\n    </StyledApp>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}